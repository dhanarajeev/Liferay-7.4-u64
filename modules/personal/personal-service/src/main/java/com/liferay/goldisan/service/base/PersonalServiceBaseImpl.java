/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.goldisan.service.base;

import com.liferay.goldisan.model.Personal;
import com.liferay.goldisan.service.PersonalService;
import com.liferay.goldisan.service.PersonalServiceUtil;
import com.liferay.goldisan.service.persistence.PersonalPersistence;
import com.liferay.portal.aop.AopService;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.util.PortalUtil;
import org.osgi.service.component.annotations.Deactivate;
import org.osgi.service.component.annotations.Reference;

import javax.sql.DataSource;
import java.lang.reflect.Field;
import java.util.List;

/**
 * Provides the base implementation for the personal remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.goldisan.service.impl.PersonalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.goldisan.service.impl.PersonalServiceImpl
 * @generated
 */
public abstract class PersonalServiceBaseImpl
	extends BaseServiceImpl
	implements AopService, IdentifiableOSGiService, PersonalService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>PersonalService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>PersonalServiceUtil</code>.
	 */
	@Deactivate
	protected void deactivate() {
		_setServiceUtilService(null);
	}

	@Override
	public Class<?>[] getAopInterfaces() {
		return new Class<?>[] {
			PersonalService.class, IdentifiableOSGiService.class
		};
	}

	@Override
	public void setAopProxy(Object aopProxy) {
		personalService = (PersonalService)aopProxy;

		_setServiceUtilService(personalService);
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return PersonalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Personal.class;
	}

	protected String getModelClassName() {
		return Personal.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = personalPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception exception) {
			throw new SystemException(exception);
		}
	}

	private void _setServiceUtilService(PersonalService personalService) {
		try {
			Field field = PersonalServiceUtil.class.getDeclaredField(
				"_service");

			field.setAccessible(true);

			field.set(null, personalService);
		}
		catch (ReflectiveOperationException reflectiveOperationException) {
			throw new RuntimeException(reflectiveOperationException);
		}
	}

	@Reference
	protected com.liferay.goldisan.service.PersonalLocalService
		personalLocalService;

	protected PersonalService personalService;

	@Reference
	protected PersonalPersistence personalPersistence;

	@Reference
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.ClassNameService
		classNameService;

	@Reference
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.UserService userService;

	private static final Log _log = LogFactoryUtil.getLog(
		PersonalServiceBaseImpl.class);


	public abstract Personal addPersonal(String firstName, String lastName, String emailAddress, long phoneNumber,
										 String createPassword, String conformPassword, String address);

	public abstract Personal getPersonalById(long personalId) throws PortalException;

	public abstract List< Personal> getPersonals(int startIndex, int lastIndex);

	public abstract Personal deletePersonal(long personalId) throws PortalException;

	public abstract Personal updatePersonal(long personalId, String firstName, String lastName, String emailAddress,
											long phoneNumber, String createPassword, String conformPassword, String address);
}
